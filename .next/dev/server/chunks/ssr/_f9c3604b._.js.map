{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/anujdwivedi/Desktop/kroolo/nega/revamp_test/app/components/ClientLayout.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/ClientLayout.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ClientLayout.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///Users/anujdwivedi/Desktop/kroolo/nega/revamp_test/app/components/ClientLayout.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/ClientLayout.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ClientLayout.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/anujdwivedi/Desktop/kroolo/nega/revamp_test/app/components/ThemeScript.tsx"],"sourcesContent":["/**\n * Theme Script Component\n * \n * This script runs before React hydrates to prevent flash of incorrect theme (FOIT).\n * It reads the theme preference from localStorage and applies it immediately.\n */\n\nexport default function ThemeScript() {\n  const themeScript = `\n    (function() {\n      try {\n        const THEME_STORAGE_KEY = 'theme-preference';\n        \n        function getSystemTheme() {\n          return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n        }\n        \n        function resolveTheme(theme, systemTheme) {\n          return theme === 'system' ? systemTheme : theme;\n        }\n        \n        function applyTheme(resolvedTheme, themePreference) {\n          const root = document.documentElement;\n          root.classList.remove('light', 'dark');\n          root.classList.add(resolvedTheme);\n          root.setAttribute('data-theme', resolvedTheme);\n          root.setAttribute('data-theme-preference', themePreference || resolvedTheme);\n          \n          // Apply theme to body for additional styling hooks\n          document.body.classList.remove('light', 'dark');\n          document.body.classList.add(resolvedTheme);\n          document.body.setAttribute('data-theme', resolvedTheme);\n          \n          // Update meta theme-color for mobile browsers with enhanced colors\n          const metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n          if (metaThemeColor) {\n            metaThemeColor.setAttribute(\n              'content', \n              resolvedTheme === 'dark' ? '#0f172a' : '#ffffff'\n            );\n          }\n          \n          // Update meta viewport-fit for better mobile experience\n          const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n          if (metaViewport && !metaViewport.getAttribute('content')?.includes('viewport-fit')) {\n            const currentContent = metaViewport.getAttribute('content') || '';\n            metaViewport.setAttribute('content', currentContent + ', viewport-fit=cover');\n          }\n        }\n        \n        // Get stored theme preference\n        let theme = 'system';\n        try {\n          const stored = localStorage.getItem(THEME_STORAGE_KEY);\n          if (stored && ['light', 'dark', 'system'].includes(stored)) {\n            theme = stored;\n          }\n        } catch (error) {\n          console.warn('Failed to read theme from localStorage:', error);\n        }\n        \n        // Resolve and apply theme\n        const systemTheme = getSystemTheme();\n        const resolvedTheme = resolveTheme(theme, systemTheme);\n        applyTheme(resolvedTheme, theme);\n        \n        // Listen for system theme changes\n        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {\n          if (theme === 'system') {\n            const newResolvedTheme = e.matches ? 'dark' : 'light';\n            applyTheme(newResolvedTheme, 'system');\n          }\n        });\n        \n        // Listen for cross-tab theme changes\n        window.addEventListener('storage', function(e) {\n          if (e.key === THEME_STORAGE_KEY && e.newValue) {\n            const newTheme = e.newValue;\n            if (['light', 'dark', 'system'].includes(newTheme)) {\n              theme = newTheme;\n              const newSystemTheme = getSystemTheme();\n              const newResolvedTheme = resolveTheme(newTheme, newSystemTheme);\n              applyTheme(newResolvedTheme, newTheme);\n            }\n          }\n        });\n        \n      } catch (error) {\n        console.warn('Theme script error:', error);\n        // Fallback to system preference\n        const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n        document.documentElement.classList.add(systemTheme);\n        document.documentElement.setAttribute('data-theme', systemTheme);\n      }\n    })();\n  `;\n\n  return (\n    <script\n      dangerouslySetInnerHTML={{ __html: themeScript }}\n      suppressHydrationWarning\n    />\n  );\n}"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;AAEc,SAAS;IACtB,MAAM,cAAc,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuFrB,CAAC;IAED,qBACE,8OAAC;QACC,yBAAyB;YAAE,QAAQ;QAAY;QAC/C,wBAAwB;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/anujdwivedi/Desktop/kroolo/nega/revamp_test/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport \"./globals.css\";\nimport ClientLayout from \"./components/ClientLayout\";\nimport ThemeScript from \"./components/ThemeScript\";\n\nexport const metadata: Metadata = {\n  title: \"Propheus - We Infer the World\",\n  description: \"We turn maps into meaning, enabling AI agents that reason about the world through location, data, and context.\",\n  viewport: \"width=device-width, initial-scale=1\",\n  themeColor: [\n    { media: \"(prefers-color-scheme: light)\", color: \"#f8fafc\" },\n    { media: \"(prefers-color-scheme: dark)\", color: \"#0f172a\" },\n  ],\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <head>\n        <ThemeScript />\n      </head>\n      <body className=\"antialiased bg-slate-50 dark:bg-slate-950 min-h-screen transition-colors duration-300\">\n        <ClientLayout>{children}</ClientLayout>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,UAAU;IACV,YAAY;QACV;YAAE,OAAO;YAAiC,OAAO;QAAU;QAC3D;YAAE,OAAO;YAAgC,OAAO;QAAU;KAC3D;AACH;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;;0BACtC,8OAAC;0BACC,cAAA,8OAAC,4IAAW;;;;;;;;;;0BAEd,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,6IAAY;8BAAE;;;;;;;;;;;;;;;;;AAIvB","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///Users/anujdwivedi/Desktop/kroolo/nega/revamp_test/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}